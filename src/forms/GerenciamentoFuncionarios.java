package forms;

import forms.Home;
import dao.DadosUsuario;
import beans.Usuario;
import dao.UsuarioDAO;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anton
 */
public class GerenciamentoFuncionarios extends javax.swing.JFrame {

    /**
     * Creates new form GerenciamentoFuncionarios
     */
    
    private Usuario userLogado;
    
    public JTable getTabela() {
        return tabela;
    }
    
    public GerenciamentoFuncionarios(int  idUsuario) {
        initComponents();
//        IniciaAtaulizacao();
        
        UsuarioDAO usuarioDao = new UsuarioDAO();
        List<Usuario> us = usuarioDao.listar();
        AtualizarTabela(us);
        
        this.userLogado = usuarioDao.buscarPorID(idUsuario);
        
        Timer timer = new Timer(3000, e -> AtualizarTabela(usuarioDao.listar())) {};
        timer.start();
        
        if(userLogado.getTipoFuncionario().equals("Gerente")) {
            btnEditar.setEnabled(true);
            btnExcluir.setEnabled(true);
        } else if(userLogado.getTipoFuncionario().equals("Funcionario")) {
            btnEditar.setEnabled(false);
            btnExcluir.setEnabled(false);
        }
        
       
    }
    
    public void AtualizarTabela(List<Usuario> usuario) {
        
        if(usuario == null) {
            usuario = new ArrayList<>();
        }
        
        String[] columns = {"Id", "Nome", "SobreNome", "CPF", "Email", "Tipo Funcionario"};
        String dados[][] = new String[usuario.size()][columns.length];
        
        int i = 0;
        
        for(Usuario u : usuario) {
            dados[i] = new String[] {
                String.valueOf(u.getId()),
                String.valueOf(u.getNome()),
                String.valueOf(u.getSobrenome()),
                String.valueOf(u.getCpf()),
                String.valueOf(u.getEmail()),
                String.valueOf(u.getTipoFuncionario())
                    
            };
            i++;
        }
        
        DefaultTableModel modelo = new DefaultTableModel(dados, columns);
        tabela.setModel(modelo);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("GERENCIAMENTO DE FUNCIONARIOS");

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Sobrenome", "CPF", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabela);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1)))
                        .addGap(0, 67, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(52, 52, 52)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
        Usuario usuario = new Usuario();
        new Home(usuario.getId()).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
    
        try {
            if(tabela.getSelectedRow() >= 0) {
                String id = (String) tabela.getValueAt(tabela.getSelectedRow(), 0);
                
                int resposta = JOptionPane.showConfirmDialog(this, "Deseja mesmo excluir o registro " + id + "?");
                
                if(resposta == 0) {
                    UsuarioDAO usuarioDao = new UsuarioDAO();
                    usuarioDao.excluir(Integer.parseInt(id));
                    JOptionPane.showMessageDialog(null, "Registro excluido com sucesso");
                    btnExcluirActionPerformed(evt);
                }
            } 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro no but√£o de excluir");
        }
        
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        
        UsuarioDAO usuarioDao = new UsuarioDAO();
        
        int linhaSelecionada = tabela.getSelectedRow();
        
        if(linhaSelecionada != -1) {
            List<Usuario> usuarios = usuarioDao.listar();
            Usuario usuario = usuarios.get(linhaSelecionada);
            new EditarDadosFuncionarios(usuario, linhaSelecionada, userLogado).setVisible(true);
        }
        
        
//        if(userLogado != null && "Gerente".equals(userLogado.getTipoFuncionario())) {
//            int linhaSelecionada = tabela.getSelectedRow();
//            
//            
//        }
        
//        for(Usuario u : DadosUsuario.listar()) {
//            if(u.getTipoFuncionario() != null && u.getTipoFuncionario().equals("Gerente")) {
//                int linhaSelecionada = tabela.getSelectedRow();
//
//                if(linhaSelecionada != -1) {
//                    Usuario usuario = DadosUsuario.listar().get(linhaSelecionada);
//                    EditarDadosFuncionarios editar = new EditarDadosFuncionarios(usuario, linhaSelecionada, userLogado);
//                    editar.setVisible(true);
//
//                } else {
//                    JOptionPane.showMessageDialog(null, "Linha n√£o selecionada tente outra vez");
//                }
//            } else {
//                JOptionPane.showMessageDialog(null, "SO o gerente pode editar os usuarios");
//            }
//        }
        
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
